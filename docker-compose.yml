version: '3.8'

networks:
  api-movies:
    name: api-movies

services:
  nginx:
    build:
      context: .
      dockerfile: nginx.dockerfile
    container_name: api-movies.nginx
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./src:/var/www/html
    networks:
      - api-movies
    depends_on:
      - php
      - postgres
  php:
    build:
      context: .
      dockerfile: php.dockerfile
    container_name: api-movies.php
    volumes:
      - ./src:/var/www/html
    networks:
      - api-movies

  postgres:
    container_name: api-movies.postgres
    image: postgres
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: parsekino
    volumes:
      - ../parser-kinopoisk/docker/postgesql/data:/var/lib/postgresql/data
    ports:
      - "5430:5432"
    networks:
      - api-movies

  composer:
    image: composer:latest
    container_name: api-movies.composer
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    user: 1000:www-data
    networks:
      - api-movies

  artisan:
    build:
      context: .
      dockerfile: php.dockerfile
    container_name: api-movies.artisan
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    entrypoint: ["php", "artisan"]
    user: 1000:www-data
    networks:
      - api-movies

  npm:
    image: node:current-alpine
    container_name: api-movies.npm
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    entrypoint: [ "npm" ]
    user: 1000:www-data
    networks:
      - api-movies

  phpunit:
    build:
      context: .
      dockerfile: php.dockerfile
    container_name: api-movies.phpunit
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    entrypoint: [ "/var/www/html/vendor/bin/phpunit" ]
    user: 1000:www-data
    networks:
      - api-movies




